@model IEnumerable<Core.Responces.DisciplineResponce>
@using System.Linq;
@using Core.Entities;
@using Core.Enums;
@using Core;
@{
    ViewBag.Title = "Дисципліни";
    User user = ViewBag.User;
    List<Discipline> userDisciplines = ViewBag.UserDisciplines;
}

<h2>Index</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Semester)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Lecturer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProviderCathedra)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Semester)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Lecturer.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProviderCathedra.Name)
        </td>
        <td>
            @Html.ActionLink("Details", "Details", new { id = item.Id }) 

            @{ 
                var userSpecialDisciplines = userDisciplines.Where(ud => ud.DisciplineType == Enums.DisciplineType.Special);
            }
            @if (item.DisciplineType == Enums.DisciplineType.Special &&
                userSpecialDisciplines.Count() < Constants.AmountSpecialDisciplines)
            {

                if (!userSpecialDisciplines.Select(d => d.Semester).Contains(item.Semester.Value))
                {
                    @:| @Html.ActionLink("Register", "Register", new { id = item.Id })
                }
            }

            @if (userSpecialDisciplines.Any(usd => usd.Id == item.Id))
            {
                @:| @Html.ActionLink("Unregister", "Unregister", new { id = item.Id })
            }
        </td>
    </tr>
}

</table>
